# Examples:
#
# - https://github.com/aspect-build/bazel-examples/tree/main/jest
# - https://github.com/aspect-build/rules_jest/tree/main/example/esm_transform

load("@npm//:defs.bzl", "npm_link_all_packages")
load("@aspect_rules_ts//ts:defs.bzl", "ts_project")
load("@aspect_rules_jest//jest:defs.bzl", "jest_test")

npm_link_all_packages()

ts_project(
    name = "src_ts",
    srcs = glob(["src/**/*.ts"], exclude = ["src/**/*.test.ts", "src/common/utils.ts"]),
    declaration = True,
    tsconfig = "//:tsconfig.json",
    # out_dir = "dist",
    deps = [
        "//:node_modules/@datastructures-js/priority-queue",
        "//:node_modules/@datastructures-js/queue",
        "//:node_modules/@types/jest",
        "//:node_modules/@types/node",
    ],
)

ts_project(
    name = "src_test_ts",
    srcs = glob(["src/**/*.test.ts"]) + ["global.d.ts", "src/common/utils.ts"],
    declaration = True,
    tsconfig = "//:tsconfig.json",
    # data = glob(["src/**/test_cases.yml"]),
    # out_dir = "dist",
    deps = [
        ":src_ts",
        "//:node_modules/@types/jest",
        "//:node_modules/jest-extended",
        "//:node_modules/yaml",
    ],
)

jest_test(
    name = "test",
    config = "//:jest.config.js",
    data = [
        ":src_test_ts",
        # "babel.config.js",
        "global.d.ts",
        "package.json",
    ] + glob(["src/**/test_cases.yml"]),
    node_modules = "//:node_modules",
)

jest_test(
    name = "test2",
    config = "jest.config.js",
    data = glob(["src/**/*.ts"]) + glob(["src/**/test_cases.yml"]) + [
        "babel.config.js",
        "custom-sequencer.js",
        "package.json",
        "//:node_modules/@babel/preset-env",
        "//:node_modules/@babel/preset-typescript",
        "//:node_modules/@jest/test-sequencer",
        "//:node_modules/babel-jest",
        "//:node_modules/jest-extended",
        "//:node_modules/yaml",
        "//:node_modules/@datastructures-js/priority-queue",
        "//:node_modules/@datastructures-js/queue",
    ],
    auto_configure_test_sequencer = False,
    node_modules = "//:node_modules",
)
